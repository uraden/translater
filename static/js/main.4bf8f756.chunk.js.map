{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","isOpen","setIsOpen","text1","setText1","textresult","setTextresult","language","setLanguage","fromlang","setFromLang","savedwords","setSavedWords","originalsavedwords","setOriginalSavedWords","bookmark","setBookmark","mapvalue","setMapValue","ts","setTs","pos","setPos","txt","setTxt","syntranslang","setSynTransLang","setOther","translateapi","dictionaryapi","requestTranslate","axios","get","requestDictionary","savedbookword","_","zip","map","results","className","title","style","position","color","display","fontSize","textAlign","onOutsideClick","foldWidth","padding","onClick","tabindex","value","onChange","e","selectLang","target","event","placeholder","then","responses","responseOne","data","text","console","log","all","spread","responseTwo","def","tr","responseThree","responseFour","responseFive","responseSix","responseOther","catch","errors","error","disabled","response","mean","id","uuid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bf8f756.chunk.js","sourcesContent":["import './App.css';\nimport axios from \"axios\";\nimport React, { useState } from 'react'\nimport uuid from 'uuid/v4'\nimport { FaRegBookmark } from 'react-icons/fa'\nimport { ImCancelCircle } from 'react-icons/im'\nimport { FaBookmark } from 'react-icons/fa'\nimport { RiBookMarkFill } from 'react-icons/ri'\nimport Slider from 'react-slide-out';\nimport 'react-slide-out/lib/index.css';\nimport _ from \"lodash\";\n\n\n\nfunction App() {\n\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  const openSlider = () => {\n    setIsOpen(true)\n  }\n\n  const closeSlider = () => {\n    setIsOpen(false)\n  }\n\n\n  const [text1, setText1] = useState('')\n  const [textresult, setTextresult] = useState('')\n  const [language, setLanguage] = useState('ru')\n  const [fromlang, setFromLang] = useState('en')\n\n  const [savedwords, setSavedWords] = useState([])\n  const [originalsavedwords, setOriginalSavedWords] = useState([])\n  const [bookmark, setBookmark] = useState(false)\n\n\n  const Showme = () => {\n\n    if (textresult !== '') {\n      setSavedWords([...savedwords, textresult])\n      setOriginalSavedWords([...originalsavedwords, text1])\n      setBookmark(!bookmark)\n    }\n\n\n  }\n\n\n  const [mapvalue, setMapValue] = useState([])\n  const [ts, setTs] = useState()\n  const [pos, setPos] = useState()\n  const [txt, setTxt] = useState()\n\n\n  const [syntranslang, setSynTransLang] = useState([])\n  const [other, setOther] = useState([])\n\n\n\n  const translateapi = `https://translate.yandex.net/api/v1.5/tr.json/translate?key=trnsl.1.1.20210819T042015Z.8bb9e7590c421096.bbadd54c1dfdee59ec27d3b4c9986f85bfae3028&lang=${language}&text=${text1}&ui=${fromlang}`\n\n  const dictionaryapi = `https://dictionary.yandex.net/api/v1/dicservice.json/lookup?key=dict.1.1.20210820T095831Z.40fea2b1d6b7ab60.5504c0547c1c1744a11423873136aa0bc442a066&lang=${fromlang}-${language}&text=${text1}`\n\n\n  //geting axios\n  const requestTranslate = axios.get(translateapi)\n  const requestDictionary = axios.get(dictionaryapi)\n\n\n  const reqTranslate = () => {\n    if (language === 'zh' || language === 'uz' || language === 'ar' || language === 'id' || language === 'ko' || language === 'ms' || language === 'hi') {\n      requestTranslate\n        .then((responses) => {\n          const responseOne = responses?.data?.text[0];\n          // use/access the results\n          console.log(responseOne)\n          setTextresult(responseOne)\n        })\n\n    }\n    else if (language === 'ru' || language === 'en' || language === 'de' || language === 'fr' || language === 'tr' || language === 'it' || language === 'es') {\n      axios.all([requestTranslate, requestDictionary])\n        .then(axios.spread((...responses) => {\n          const responseOne = responses[0]?.data?.text[0];\n          const responseTwo = responses[1]?.data?.def[0]?.tr;\n          const responseThree = responses[1]?.data?.def[0]?.pos\n          const responseFour = responses[1]?.data?.def[0]?.ts\n          const responseFive = responses[1]?.data?.def[0]?.text\n          const responseSix = responses[1]?.data?.def?.[0]?.tr\n\n          const responseOther = responses[1].data\n\n          // use/access the results\n          console.log(responseOne);\n          setTextresult(responseOne);\n          console.log(responseOne)\n          setOther(responseTwo);\n          console.log(responseOther)\n          setPos(responseThree);\n          setTs(responseFour);\n          setTxt(responseFive)\n          setMapValue(responseSix)\n          setSynTransLang(responseSix)\n\n        })).catch(errors => {\n          // react on errors.\n          console.error(errors);\n        })\n\n    }\n    setBookmark(false)\n  }\n\n\n\n  const swichLang = () => {\n    setLanguage(fromlang)\n    setFromLang(language)\n  }\n\n  const inputChangeHandler = (event) => {\n    setText1(event.target.value)\n  }\n\n\n\n\n  const removeword = () => {\n    setTxt('')\n    setSynTransLang([])\n    setPos()\n    setTs()\n    setMapValue([])\n    setText1('')\n    setTextresult('')\n    setBookmark(false)\n  }\n\n\n \n\n\n  const zippedwords = _.zip(savedwords, originalsavedwords) \n\n  const savedbookword = zippedwords.map((results)=>(\n    <div className=\"jeu\">\n       \n       <p> {results[1]}</p>\n       <p>  {results[0]} </p>\n    </div>\n  ))\n\n\n  const head_slider_style = {\n    position: 'relative',\n    color: '#FFDC61',\n    display: 'block',\n    fontSize: 30,\n    textAlign: 'center'\n\n  }\n  return (\n    <div className=\"App\">\n\n\n\n\n      <Slider\n        title={<div style={head_slider_style}> Saved Words </div>}\n        isOpen={isOpen}\n        onOutsideClick={closeSlider}\n        foldWidth=\"100px\"\n      >\n\n\n\n        <div style={{ padding: '10px' }} className=\"saved-words\">\n          <h3> {savedbookword}</h3>\n        </div>\n\n\n      </Slider>\n\n\n      <br />\n\n      <div className=\"heading-top\">\n        <div className=\"heading\">\n          <h1 className=\"p1 \"> Powered by </h1>\n          <h1 className=\"yan\">Yandex </h1>\n          <h1 className=\"p1\">Translate </h1>\n        </div>\n\n        <a onClick={openSlider}> <RiBookMarkFill className=\"saved-bookmark\" /> </a>\n\n      </div>\n\n\n      <div className=\"text-result-area\">\n\n\n        <div className=\"each-section section-form\" tabindex=\"1\">\n\n\n\n          <select className=\"select from\"\n            value={fromlang}\n            onChange={(e) => {\n              const selectLang = e.target.value;\n              setFromLang(selectLang)\n            }}\n          >\n            <option value=\"zh\"> Chinese </option>\n            <option value=\"en\"> English </option>\n            <option value=\"de\"> German </option>\n            <option value=\"ru\"> Russian </option>\n            <option value=\"fr\"> French </option>\n            <option value=\"uz\"> Uzbek </option>\n            <option value=\"ar\"> Arabic </option>\n            <option value=\"tr\"> Turkish </option>\n            <option value=\"id\"> Indonesian </option>\n            <option value=\"it\"> Italian </option>\n            <option value=\"es\"> Spanish </option>\n            <option value=\"ko\"> Korean </option>\n            <option value=\"ms\"> Malay </option>\n            <option value=\"hi\"> Hindi </option>\n          </select>\n          <ImCancelCircle className=\"earase\" onClick={removeword} />\n          <textarea\n            className=\"input-text write\"\n            onChange={inputChangeHandler}\n            value={text1}\n            placeholder=\"Enter text here to translate\"\n          />\n\n        </div>\n\n\n\n\n\n\n        <div className=\"bts-all\">\n          <button onClick={reqTranslate} className=\"btn-tran\"> Translate </button>\n          <button onClick={swichLang} className=\"btn-tran switch\"> ←Switch→ </button>\n          {/*  <button onClick={reqLibrary}> click me </button> */}\n        </div>\n\n        <div className=\"each-section\">\n          <select\n            className=\"select to\"\n            value={language}\n            onChange={(e) => {\n              const selectLang = e.target.value;\n              setLanguage(selectLang)\n            }}\n\n          >\n            <option value=\"zh\"> 中文 </option>\n            <option value=\"en\"> English </option>\n            <option value=\"de\"> Deutsch </option>\n            <option value=\"ru\"> Русский </option>\n            <option value=\"fr\"> Français </option>\n            <option value=\"uz\"> O'zbek </option>\n            <option value=\"ar\"> العربية </option>\n            <option value=\"tr\"> Türkçe </option>\n            <option value=\"id\"> bahasa Indo </option>\n            <option value=\"it\"> Italiano </option>\n            <option value=\"es\"> Español </option>\n            <option value=\"ko\"> 한국인 </option>\n            <option value=\"ms\"> Malay </option>\n            <option value=\"hi\"> हिन्दी </option>\n          </select>\n\n          <div onClick={Showme}>     {bookmark ? <FaBookmark className=\"bookmarkfill\" /> : <FaRegBookmark className=\"bookmark\" />}</div>\n\n          <textarea\n            disabled\n            className=\"input-text result\"\n            value={textresult}\n          />\n        </div>\n\n      </div>\n\n\n\n      <div className=\"synonyms\">\n        <div className=\"meanings one\">\n          <h2 className={txt ? \"word related\" : 'noneshow'}> Related words</h2>\n          <ul>\n            {mapvalue && mapvalue.map((response) => (\n              <span onClick={() => { setText1((response.mean[0].text)) }}>\n                <li className=\"syno origin\" key={uuid()} id={uuid}> {response?.mean?.[0]?.text} </li>\n              </span>\n            ))}\n          </ul>\n        </div>\n\n\n\n        <div className=\"meanings two\">\n          <h2 className={txt ? \"word dictionary\" : 'noneshow'}> Dictionary</h2>\n          <p className=\"pdescr\"> {txt} <span className={ts ? 'transcript' : 'noneshow'}> [{ts}]  </span> <span className=\"pos\">{pos}</span> </p>\n\n          <ol className=\"from-syn\">\n            {syntranslang && syntranslang.map((response) => (\n              <li> {response?.text} </li>\n            ))}\n          </ol>\n        </div>\n      </div>\n\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}